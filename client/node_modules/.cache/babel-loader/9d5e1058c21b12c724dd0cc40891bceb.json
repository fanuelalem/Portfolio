{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/searchForm/formContainer/index.js\";\nimport React, { Component } from 'react';\nimport API from './../utils';\nimport Detail from './../details';\nimport SearchBar from './../search';\nimport { Grid, Message, List, Image, Icon, Container, Loader, Segment } from 'semantic-ui-react';\nimport Card from './../Card';\nimport Plot from 'react-plotly.js';\nimport { connect } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\nimport otherUtil from './../otherutil';\nimport axios from 'axios';\nexport default class FormContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      result: {},\n      search: '',\n      xvalues: [],\n      yvalues: []\n    };\n\n    this.searchMovies = async query => {\n      let xfunction = [];\n      let yfunction = [];\n      otherUtil.search(query).then(response => {\n        console.log(response, 'data');\n        this.setState({\n          result: response.data\n        }, () => {\n          console.log(response.data);\n        });\n      }); //  API.search(query)\n      // .then((response)=>{\n      //   for(var key in response.data['Time Series (Daily)']){\n      //     xfunction.push(key);\n      //     yfunction.push(response.data['Time Series (Daily)'][key]['1. open'])\n      //   }\n      //   this.setState({xvalues:xfunction,yvalues:yfunction})\n      //  })\n      // .catch((e)=>{\n      //     console.log(e)\n      // })\n    };\n\n    this.handleInputChange = event => {\n      const value = event.target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.searchMovies(this.state.search);\n    };\n  }\n\n  componentDidMount() {\n    this.searchMovies('aapl');\n  }\n\n  render() {\n    // const data={x:this.props.graphx,y:this.props.graphy}\n    // console.log(this.props,'this props')\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '15px 0 0 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '0 0 0 70px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Plot, {\n      data: [{\n        x: this.props.graphx,\n        y: this.props.graphy,\n        type: 'scatter',\n        mode: ' ',\n        marker: {\n          color: 'red'\n        }\n      }],\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      useResizeHandler: true,\n      responsive: true,\n      layout: {\n        titlefont: {\n          family: 'Arial, sans-serif',\n          size: 25,\n          color: 'white'\n        },\n        xaxis: {\n          color: 'white'\n        },\n        yaxis: {\n          color: 'white'\n        },\n        paper_bgcolor: '#222323',\n        plot_bgcolor: '#222323',\n        title: `${this.props.info.name ? this.props.info.name : `no stock ...`}`,\n        autosize: true\n      } // newshape:{line:{color:'white'}}, colorway:{colorlist:'white'},\n      // xaxis:{color:'white'},yaxis:{color:'white'},paper_bgcolor:'#222323',plot_bgcolor:'#222323' }}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: '#333333',\n        margin: '15px 0 20px 0px',\n        borderRadius: '9px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Row, {\n      columns: 5,\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Current\"), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, this.props.qoute.c)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \" High\"), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }, this.props.qoute.h)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, \" Low\"), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, this.props.qoute.l)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, \" Open\"), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, this.props.qoute.o)), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, \" PC\"), /*#__PURE__*/React.createElement(\"h4\", {\n      style: {\n        color: 'white',\n        fontWeight: '500'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, this.props.qoute.pc))))));\n  }\n\n} // function mapStateToProps(state){\n//   return {allResult:state.result.allResult,resultError:state.result.allResult}\n// }\n// export default connect(mapStateToProps,{getResult})(FormContainer)\n// function mapStateToProps(state){\n//   return{allResult:state.result.allResult,resultError:state.result.resultError}\n// }\n// export default connect(mapStateToProps,{searchMovies})(FormContainer)\n\n{\n  /* <Grid padded='horizontally'textAlign='center' verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 700 }}> */\n}\n{\n  /* <SearchBar\n  value={this.state.search}\n  handleInputChange={this.handleInputChange}\n  handleFormSubmit={this.handleFormSubmit}\n  /> */\n}\n{\n  /* <Card\n  exchange={this.state.result.exchange}\n  weburl={this.state.result.weburl}\n  ticker={this.state.result.ticker}\n  logo={this.state.result.logo}\n  heading={this.state.result.name || \n    \n    <Message negative>\n    <Message.Header>No results to display </Message.Header>\n      <p>Please try again...</p>\n  </Message>\n  }>\n  {this.state.result.name ? (\n  <Detail\n  weburl={this.state.result.weburl}\n  exchange={this.state.result.exchange}\n  shareOutstanding={this.state.result.shareOutstanding}\n  finnhubIndustry={this.state.result.finnhubIndustry}\n  name={this.state.result.name}\n  ticker={this.state.result.ticker}\n  logo={this.state.result.logo}\n  />\n  ) : (\n  <h3> </h3>\n  ) }\n  </Card>  */\n}\n{\n  /* <UserTodoList/> */\n}\n{\n  /* <List>\n  <Grid>\n  \n  <Grid.Row columns={4}>\n      <Grid.Column>\n      <List.Item>\n      <List.Header> <h2>   Company</h2> </List.Header><h5> {this.state.result.name}</h5> \n    </List.Item>      </Grid.Column>\n      <Grid.Column>\n      <List.Item>\n      <List.Header><h2 > Website</h2></List.Header>\n     <h5>   <a href={this.state.result.weburl}>   {this.state.result.weburl}    </a>    </h5>\n    </List.Item>      </Grid.Column>\n      <Grid.Column>\n      <List.Item>\n      <List.Header><h2> Exchange</h2></List.Header><h5> \n  {this.state.result.exchange}   \n       </h5>\n  </List.Item>      </Grid.Column>\n      <Grid.Column>\n      <List.Item>\n      <List.Header><h2> Industry</h2></List.Header>\n      <h5>\n  {this.state.result.finnhubIndustry}\n       </h5>\n     </List.Item>      </Grid.Column>\n    </Grid.Row>\n    </Grid> */\n}","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/searchForm/formContainer/index.js"],"names":["React","Component","API","Detail","SearchBar","Grid","Message","List","Image","Icon","Container","Loader","Segment","Card","Plot","connect","Line","otherUtil","axios","FormContainer","state","result","search","xvalues","yvalues","searchMovies","query","xfunction","yfunction","then","response","console","log","setState","data","handleInputChange","event","value","target","name","handleFormSubmit","preventDefault","componentDidMount","render","margin","x","props","graphx","y","graphy","type","mode","marker","color","width","height","titlefont","family","size","xaxis","yaxis","paper_bgcolor","plot_bgcolor","title","info","autosize","backgroundColor","borderRadius","textAlign","fontWeight","qoute","c","h","l","o","pc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport API from './../utils';\nimport Detail from './../details';\nimport SearchBar from './../search';\nimport {\n  Grid,\n  Message,\n  List,\n  Image,\n  Icon,\n  Container,\n  Loader,\n  Segment,\n} from 'semantic-ui-react';\nimport Card from './../Card';\nimport Plot from 'react-plotly.js';\nimport { connect } from 'react-redux';\nimport { Line } from 'react-chartjs-2';\n\nimport otherUtil from './../otherutil';\nimport axios from 'axios';\n\nexport default class FormContainer extends Component {\n  state = {\n    result: {},\n    search: '',\n    xvalues: [],\n    yvalues: [],\n  };\n  componentDidMount() {\n    this.searchMovies('aapl');\n  }\n\n  searchMovies = async query => {\n    let xfunction = [];\n    let yfunction = [];\n\n    otherUtil.search(query).then(response => {\n      console.log(response, 'data');\n      this.setState({ result: response.data }, () => {\n        console.log(response.data);\n      });\n    });\n\n    //  API.search(query)\n    // .then((response)=>{\n    //   for(var key in response.data['Time Series (Daily)']){\n    //     xfunction.push(key);\n    //     yfunction.push(response.data['Time Series (Daily)'][key]['1. open'])\n    //   }\n    //   this.setState({xvalues:xfunction,yvalues:yfunction})\n\n    //  })\n    // .catch((e)=>{\n    //     console.log(e)\n    // })\n  };\n\n  handleInputChange = event => {\n    const value = event.target.value;\n    const name = event.target.name;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchMovies(this.state.search);\n  };\n\n  render() {\n    // const data={x:this.props.graphx,y:this.props.graphy}\n\n    // console.log(this.props,'this props')\n\n    return (\n      <div style={{ margin: '15px 0 0 0' }}>\n        <Container>\n          <div style={{ margin: '0 0 0 70px' }}>\n            {/* <h1 > {this.props.qoute? `$${this.props.qoute.c}`   : \n  <Segment>\n  <Loader disabled />\n\n  <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n</Segment>\n  }</h1> */}\n          </div>\n        </Container>\n\n        <Plot\n          data={[\n            {\n              x: this.props.graphx,\n              y: this.props.graphy,\n              type: 'scatter',\n              mode: ' ',\n              marker: { color: 'red' },\n            },\n          ]}\n          style={{ width: '100%', height: '100%' }}\n          useResizeHandler={true}\n          responsive={true}\n          layout={{\n            titlefont: {\n              family: 'Arial, sans-serif',\n              size: 25,\n              color: 'white',\n            },\n            xaxis: { color: 'white' },\n            yaxis: { color: 'white' },\n            paper_bgcolor: '#222323',\n            plot_bgcolor: '#222323',\n            title: `${\n              this.props.info.name ? this.props.info.name : `no stock ...`\n            }`,\n\n            autosize: true,\n          }}\n          // newshape:{line:{color:'white'}}, colorway:{colorlist:'white'},\n          // xaxis:{color:'white'},yaxis:{color:'white'},paper_bgcolor:'#222323',plot_bgcolor:'#222323' }}\n        />\n\n        <div\n          style={{\n            backgroundColor: '#333333',\n            margin: '15px 0 20px 0px',\n            borderRadius: '9px',\n          }}\n        >\n          <Grid>\n            <Grid.Row columns={5} style={{ textAlign: 'center' }}>\n              <Grid.Column>\n                <h3 style={{ color: 'white', fontWeight: '500' }}>Current</h3>\n                <h4 style={{ color: 'white' }}>{this.props.qoute.c}</h4>\n              </Grid.Column>\n              <Grid.Column>\n                <h3 style={{ color: 'white', fontWeight: '500' }}> High</h3>\n                <h4 style={{ color: 'white', fontWeight: '500' }}>\n                  {this.props.qoute.h}\n                </h4>\n              </Grid.Column>\n              <Grid.Column>\n                <h3 style={{ color: 'white', fontWeight: '500' }}> Low</h3>\n                <h4 style={{ color: 'white', fontWeight: '500' }}>\n                  {this.props.qoute.l}\n                </h4>\n              </Grid.Column>\n\n              <Grid.Column>\n                <h3 style={{ color: 'white', fontWeight: '500' }}> Open</h3>\n                <h4 style={{ color: 'white', fontWeight: '500' }}>\n                  {this.props.qoute.o}\n                </h4>\n              </Grid.Column>\n              <Grid.Column>\n                <h3 style={{ color: 'white', fontWeight: '500' }}> PC</h3>\n                <h4 style={{ color: 'white', fontWeight: '500' }}>\n                  {this.props.qoute.pc}\n                </h4>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\n// function mapStateToProps(state){\n//   return {allResult:state.result.allResult,resultError:state.result.allResult}\n// }\n// export default connect(mapStateToProps,{getResult})(FormContainer)\n\n// function mapStateToProps(state){\n//   return{allResult:state.result.allResult,resultError:state.result.resultError}\n// }\n// export default connect(mapStateToProps,{searchMovies})(FormContainer)\n\n{\n  /* <Grid padded='horizontally'textAlign='center' verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 700 }}> */\n}\n\n{\n  /* <SearchBar\n value={this.state.search}\n handleInputChange={this.handleInputChange}\n handleFormSubmit={this.handleFormSubmit}\n/> */\n}\n{\n  /* <Card\nexchange={this.state.result.exchange}\nweburl={this.state.result.weburl}\nticker={this.state.result.ticker}\nlogo={this.state.result.logo}\nheading={this.state.result.name || \n    \n    <Message negative>\n    <Message.Header>No results to display </Message.Header>\n      <p>Please try again...</p>\n  </Message>\n }>\n {this.state.result.name ? (\n <Detail\n weburl={this.state.result.weburl}\n\n exchange={this.state.result.exchange}\n shareOutstanding={this.state.result.shareOutstanding}\n finnhubIndustry={this.state.result.finnhubIndustry}\n name={this.state.result.name}\n ticker={this.state.result.ticker}\n logo={this.state.result.logo}\n />\n ) : (\n  <h3> </h3>\n) }\n</Card>  */\n}\n\n{\n  /* <UserTodoList/> */\n}\n\n{\n  /* <List>\n<Grid>\n  \n <Grid.Row columns={4}>\n      <Grid.Column>\n      <List.Item>\n      <List.Header> <h2>   Company</h2> </List.Header><h5> {this.state.result.name}</h5> \n    </List.Item>      </Grid.Column>\n      <Grid.Column>\n      <List.Item>\n      <List.Header><h2 > Website</h2></List.Header>\n     <h5>   <a href={this.state.result.weburl}>   {this.state.result.weburl}    </a>    </h5>\n    </List.Item>      </Grid.Column>\n      <Grid.Column>\n      <List.Item>\n      <List.Header><h2> Exchange</h2></List.Header><h5> \n{this.state.result.exchange}   \n\n      </h5>\n  </List.Item>      </Grid.Column>\n      <Grid.Column>\n      <List.Item>\n      <List.Header><h2> Industry</h2></List.Header>\n      <h5>\n{this.state.result.finnhubIndustry}\n\n      </h5>\n     </List.Item>      </Grid.Column>\n    </Grid.Row>\n    </Grid> */\n}\n"]},"metadata":{},"sourceType":"module"}