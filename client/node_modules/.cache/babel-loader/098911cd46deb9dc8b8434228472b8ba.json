{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/SignUp/index.js\";\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { Form, Segment, Button, Container, Grid, Image, Header, Icon } from 'semantic-ui-react';\nimport { email, length, required } from 'redux-form-validators';\nimport logo from './../../components/Images/Logo.png';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport fanuel from './../../components/Images/fanuel.jpg';\nimport ganesh from './../../components/Images/ganesh.png';\nimport vanessa from './../../components/Images/vanessa.jpeg';\nimport husam from './../../components/Images/husam.jpeg';\nimport './../../index.css';\nimport axios from 'axios';\nimport './../../index.css';\nimport { AUTH_USER, AUTH_USER_ERROR } from '../../actions/types';\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderEmail = ({\n      input,\n      meta\n    }) => {\n      // console.log(meta);\n      return /*#__PURE__*/React.createElement(Form.Input, Object.assign({}, input, {\n        error: meta.touched && meta.error,\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        autoComplete: \"off\",\n        placeholder: \"Email Address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    this.renderUserName = ({\n      input,\n      meta\n    }) => {\n      // console.log(meta);\n      return /*#__PURE__*/React.createElement(Form.Input, Object.assign({}, input, {\n        error: meta.touched && meta.error,\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        autoComplete: \"off\",\n        placeholder: \"User Name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }\n      }));\n    };\n\n    this.onSubmit = async (formValues, dispatch) => {\n      console.log(formValues); // console.log(formsProps)\n\n      try {\n        const {\n          data\n        } = await axios.post('/api/auth/signup', formValues);\n        localStorage.setItem('token', data.token);\n        dispatch({\n          type: AUTH_USER,\n          payload: data.token\n        });\n        console.log('reached');\n        this.props.history.push('/watchlist');\n      } catch (e) {\n        dispatch({\n          type: AUTH_USER_ERROR,\n          payload: e\n        });\n      }\n    };\n\n    this.renderPassword = ({\n      input,\n      meta\n    }) => {\n      return /*#__PURE__*/React.createElement(Form.Input, Object.assign({}, input, {\n        error: meta.touched && meta.error,\n        fluid: true,\n        type: \"password\",\n        icon: \"lock\",\n        placeholder: \"password\",\n        autoComplete: \"off\",\n        iconPosition: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }\n      }));\n    };\n  }\n\n  render() {\n    // console.log(\"Inside of signup render\", this.props);\n    const {\n      handleSubmit,\n      invalid,\n      submitting,\n      submitFailed\n    } = this.props;\n    return (\n      /*#__PURE__*/\n      // onSubmit={handleSubmit(this.onSubmit)}\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Helmet, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"style\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, 'body { background-color:#532f8c;  }')), /*#__PURE__*/React.createElement(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: '75vh',\n          margin: '0px 0 99px 0'\n        },\n        verticalAlign: \"middle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        style: {\n          maxWidth: 500\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        size: \"large\",\n        onSubmit: handleSubmit(this.onSubmit),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Segment, {\n        style: {\n          backgroundColor: '#f7f8fa'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        color: \"grey\",\n        textAlign: \"center\",\n        style: {\n          fontSize: '33px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        style: {\n          backgroundColor: 'white'\n        },\n        className: \"im22\",\n        src: logo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          margin: '0 0 0 15px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 19\n        }\n      }, \"Create an account\", ' ')), /*#__PURE__*/React.createElement(Field, {\n        name: \"email\",\n        component: this.renderEmail,\n        validate: [required({\n          msg: 'Email is required'\n        }), email({\n          msg: 'You must provide a valid email address'\n        })],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Field, {\n        name: \"password\",\n        component: this.renderPassword,\n        validate: [required({\n          msg: 'You must provide a Password'\n        }), length({\n          min: 6,\n          msg: 'Your password must be at least 6 characters long'\n        })],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Button, {\n        content: \"Sign Up\",\n        color: \"purple\",\n        fluid: true,\n        size: \"large\",\n        type: \"submit\",\n        disabled: invalid || submitting || submitFailed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 17\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"div-tag1\",\n        style: {\n          backgroundColor: '#222222'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Segment, {\n        vertical: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        columns: 3,\n        divided: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        className: \"how-it-works\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }\n      }, \"10/10 Stock Tracker\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'white',\n          fontSize: '1.25rem',\n          fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 23\n        }\n      }, \"This application is a helpful tool to save stocks onto a personal watchlist. It provides information on the stock markets top 10 winners and losers of the day. Users can also search and track any stock in the market and view stocks that are trending among other users.\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        className: \"how-it-works\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, ' ', \"Get Started\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'white',\n          fontSize: '1.25rem',\n          fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }\n      }, ' ', \"Get access to your Watchlist by creating an account.\"), /*#__PURE__*/React.createElement(Link, {\n        as: Link,\n        to: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        color: \"purple\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 23\n        }\n      }, \" Register Now\"))), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        style: {\n          color: 'white'\n        },\n        className: \"how-it-works\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }\n      }, ' ', \"Contact Us\"), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          color: 'white',\n          fontSize: '1.25rem',\n          fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif',\n          marginBottom: '10px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }\n      }, ' ', /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 23\n        }\n      }, ' ', /*#__PURE__*/React.createElement(\"a\", {\n        href: \"mailto:fanuelnalem@outlook.com\",\n        style: {\n          color: 'white'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 25\n        }\n      }, ' ', /*#__PURE__*/React.createElement(Icon, {\n        name: \"mail\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 27\n        }\n      }), \"Send Feedback\"), ' ')), /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"how-it-works\",\n        style: {\n          color: 'white',\n          marginTop: '0',\n          marginBottom: '18px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 21\n        }\n      }, \"Developed By\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Row, {\n        columns: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"img\",\n        src: vanessa,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"img\",\n        src: husam,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"img\",\n        src: fanuel,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(Grid.Column, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        className: \"img\",\n        src: ganesh,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 29\n        }\n      }))))))))), /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          backgroundColor: 'rgb(55, 55, 59)',\n          padding: '10px',\n          borderRadius: '5px',\n          color: 'white',\n          fontSize: '1.25rem',\n          fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif'\n        },\n        className: \"p-tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }\n      }, \"Copyright 2020. All rights reserved.\")))) // <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n      //   <Segment stacked>\n      //     <Field\n      //       name='email'\n      //       iscool='mannyiscool'\n      //       component={ this.renderEmail }\n      //       validate={\n      //         [\n      //           required({ msg: 'Email is required' }),\n      //           email({ msg: 'You must provide a valid email address' })\n      //         ]\n      //       }\n      //     />\n      //     <Field\n      //       name='password'\n      //       component={this.renderPassword}\n      //       validate={\n      //         [\n      //           required({ msg: 'You must provide a password' }),\n      //           length({ min: 6, msg: 'Your password must be at least 6 characters long' })\n      //         ]\n      //       }\n      //     />\n      //     <Button\n      //       content='Sign up'\n      //       color='teal'\n      //       fluid\n      //       size='large'\n      //       type='submit'\n      // disabled={ invalid || submitting || submitFailed }\n      //     />\n      //   </Segment>\n      // </Form>\n\n    );\n  }\n\n}\n\nconst asyncValidate = async ({\n  email\n}) => {\n  try {\n    const {\n      data\n    } = await axios.get(`/api/user/emails?email=${email}`);\n\n    if (data) {\n      throw new Error();\n    }\n  } catch (e) {\n    throw {\n      email: 'email is already taken'\n    };\n  }\n}; // const asyncValidate = async formValues => {\n//   try {\n//     const { data } = await axios.get(`/api/user/emails`);\n//     const foundEmail = data.some((user)=>(user.email === formValues.email))\n//     if(foundEmail){\n//       throw new Error();\n//     }\n//     // ?email=${formValues.email}\n//     // if (data) {\n//     //   throw new Error();\n//     // }\n//   } catch (e) {\n//     throw { email: 'Email already exists, please sign up with a different email' };\n//   }\n// }\n// export default reduxForm({form:'signup'})(SignUp)\n\n\nexport default reduxForm({\n  form: 'signup',\n  asyncValidate,\n  asyncChangeFields: ['email']\n})(SignUp); // export default SignUp;","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/SignUp/index.js"],"names":["React","Component","Field","reduxForm","Form","Segment","Button","Container","Grid","Image","Header","Icon","email","length","required","logo","Helmet","Link","fanuel","ganesh","vanessa","husam","axios","AUTH_USER","AUTH_USER_ERROR","SignUp","renderEmail","input","meta","touched","error","renderUserName","onSubmit","formValues","dispatch","console","log","data","post","localStorage","setItem","token","type","payload","props","history","push","e","renderPassword","render","handleSubmit","invalid","submitting","submitFailed","height","margin","maxWidth","backgroundColor","fontSize","msg","min","color","fontFamily","marginBottom","marginTop","padding","borderRadius","asyncValidate","get","Error","form","asyncChangeFields"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,SACEC,IADF,EAEEC,OAFF,EAGEC,MAHF,EAIEC,SAJF,EAKEC,IALF,EAMEC,KANF,EAOEC,MAPF,EAQEC,IARF,QASO,mBATP;AAUA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,uBAAxC;AACA,OAAOC,IAAP,MAAiB,oCAAjB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,OAAO,mBAAP;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,SAASC,SAAT,EAAoBC,eAApB,QAA2C,qBAA3C;;AAEA,MAAMC,MAAN,SAAqBxB,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC7ByB,WAD6B,GACf,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAqB;AACjC;AACA,0BACE,oBAAC,IAAD,CAAM,KAAN,oBACMD,KADN;AAEE,QAAA,KAAK,EAAEC,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAF9B;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,YAAY,EAAC,MALf;AAME,QAAA,YAAY,EAAC,KANf;AAOE,QAAA,WAAW,EAAC,eAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAWD,KAd4B;;AAAA,SAe7BC,cAf6B,GAeZ,CAAC;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAqB;AACpC;AACA,0BACE,oBAAC,IAAD,CAAM,KAAN,oBACMD,KADN;AAEE,QAAA,KAAK,EAAEC,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAF9B;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,IAAI,EAAC,MAJP;AAKE,QAAA,YAAY,EAAC,MALf;AAME,QAAA,YAAY,EAAC,KANf;AAOE,QAAA,WAAW,EAAC,WAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAWD,KA5B4B;;AAAA,SA6B7BE,QA7B6B,GA6BlB,OAAOC,UAAP,EAAmBC,QAAnB,KAAgC;AACzCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,UAAZ,EADyC,CAEzC;;AACA,UAAI;AACF,cAAM;AAAEI,UAAAA;AAAF,YAAW,MAAMf,KAAK,CAACgB,IAAN,CAAW,kBAAX,EAA+BL,UAA/B,CAAvB;AACAM,QAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BH,IAAI,CAACI,KAAnC;AACAP,QAAAA,QAAQ,CAAC;AAAEQ,UAAAA,IAAI,EAAEnB,SAAR;AAAmBoB,UAAAA,OAAO,EAAEN,IAAI,CAACI;AAAjC,SAAD,CAAR;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,aAAKQ,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,OAND,CAME,OAAOC,CAAP,EAAU;AACVb,QAAAA,QAAQ,CAAC;AAAEQ,UAAAA,IAAI,EAAElB,eAAR;AAAyBmB,UAAAA,OAAO,EAAEI;AAAlC,SAAD,CAAR;AACD;AACF,KAzC4B;;AAAA,SAyD7BC,cAzD6B,GAyDZ,CAAC;AAAErB,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAD,KAAqB;AACpC,0BACE,oBAAC,IAAD,CAAM,KAAN,oBACMD,KADN;AAEE,QAAA,KAAK,EAAEC,IAAI,CAACC,OAAL,IAAgBD,IAAI,CAACE,KAF9B;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,WAAW,EAAC,UANd;AAOE,QAAA,YAAY,EAAC,KAPf;AAQE,QAAA,YAAY,EAAC,MARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF;AAYD,KAtE4B;AAAA;;AAwE7BmB,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEC,MAAAA,YAAF;AAAgBC,MAAAA,OAAhB;AAAyBC,MAAAA,UAAzB;AAAqCC,MAAAA;AAArC,QAAsD,KAAKT,KAAjE;AACA;AAAA;AACE;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAQ,qCAAR,CADF,CAFF,eAKE,oBAAC,IAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,KAAK,EAAE;AAAEU,UAAAA,MAAM,EAAE,MAAV;AAAkBC,UAAAA,MAAM,EAAE;AAA1B,SAFT;AAGE,QAAA,aAAa,EAAC,QAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,QAAQ,EAAEN,YAAY,CAAC,KAAKlB,QAAN,CAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEyB,UAAAA,eAAe,EAAE;AAAnB,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,MADR;AAEE,QAAA,SAAS,EAAC,QAFZ;AAGE,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE;AAAED,UAAAA,eAAe,EAAE;AAAnB,SADT;AAEE,QAAA,SAAS,EAAC,MAFZ;AAGE,QAAA,GAAG,EAAE1C,IAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,eAUE;AAAM,QAAA,KAAK,EAAE;AAAEwC,UAAAA,MAAM,EAAE;AAAV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACoB,GADpB,CAVF,CADF,eAeE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAE,KAAK7B,WAFlB;AAGE,QAAA,QAAQ,EAAE,CACRZ,QAAQ,CAAC;AAAE6C,UAAAA,GAAG,EAAE;AAAP,SAAD,CADA,EAER/C,KAAK,CAAC;AAAE+C,UAAAA,GAAG,EAAE;AAAP,SAAD,CAFG,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAfF,eAuBE,oBAAC,KAAD;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,SAAS,EAAE,KAAKX,cAFlB;AAGE,QAAA,QAAQ,EAAE,CACRlC,QAAQ,CAAC;AAAE6C,UAAAA,GAAG,EAAE;AAAP,SAAD,CADA,EAER9C,MAAM,CAAC;AACL+C,UAAAA,GAAG,EAAE,CADA;AAELD,UAAAA,GAAG,EAAE;AAFA,SAAD,CAFE,CAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAvBF,eAkCE,oBAAC,MAAD;AACE,QAAA,OAAO,EAAC,SADV;AAEE,QAAA,KAAK,EAAC,QAFR;AAGE,QAAA,KAAK,MAHP;AAIE,QAAA,IAAI,EAAC,OAJP;AAKE,QAAA,IAAI,EAAC,QALP;AAME,QAAA,QAAQ,EAAER,OAAO,IAAIC,UAAX,IAAyBC,YANrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlCF,CADF,CADF,CALF,CALF,eA0DE;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAAEI,UAAAA,eAAe,EAAE;AAAnB,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,OAAD;AAAS,QAAA,QAAQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,CAAf;AAAkB,QAAA,OAAO,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAAX;AAA+B,QAAA,SAAS,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,KAAK,EAAE,OADF;AAELH,UAAAA,QAAQ,EAAE,SAFL;AAGLI,UAAAA,UAAU,EACR;AAJG,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wRADF,CAJF,CADF,eAsBE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,KAAK,EAAE;AAAED,UAAAA,KAAK,EAAE;AAAT,SAAX;AAA+B,QAAA,SAAS,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,gBADF,eAKE;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,KAAK,EAAE,OADF;AAELH,UAAAA,QAAQ,EAAE,SAFL;AAGLI,UAAAA,UAAU,EACR;AAJG,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAQG,GARH,yDALF,eAgBE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAE7C,IAAV;AAAgB,QAAA,EAAE,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAhBF,CAtBF,eA0CE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,KAAK,EAAE;AAAE4C,UAAAA,KAAK,EAAE;AAAT,SAAX;AAA+B,QAAA,SAAS,EAAC,cAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eADF,eAKE;AACE,QAAA,KAAK,EAAE;AACLA,UAAAA,KAAK,EAAE,OADF;AAELH,UAAAA,QAAQ,EAAE,SAFL;AAGLI,UAAAA,UAAU,EACR,6CAJG;AAKLC,UAAAA,YAAY,EAAE;AALT,SADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASG,GATH,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,GADH,eAEE;AACE,QAAA,IAAI,EAAC,gCADP;AAEE,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAE;AAAT,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIG,GAJH,eAKE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,kBAFF,EAQO,GARP,CAVF,CALF,eA2BE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,KAAK,EAAE;AACLA,UAAAA,KAAK,EAAE,OADF;AAELG,UAAAA,SAAS,EAAE,GAFN;AAGLD,UAAAA,YAAY,EAAE;AAHT,SAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA3BF,eAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAE,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,GAAG,EAAE3C,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,eAIE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,GAAG,EAAEC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,eAOE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,GAAG,EAAEH,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,eAUE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,GAAG,EAAEC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAVF,CADF,CADF,CArCF,CA1CF,CADF,CADF,CADF,eAwGE;AACE,QAAA,KAAK,EAAE;AACLsC,UAAAA,eAAe,EAAE,iBADZ;AAELQ,UAAAA,OAAO,EAAE,MAFJ;AAGLC,UAAAA,YAAY,EAAE,KAHT;AAILL,UAAAA,KAAK,EAAE,OAJF;AAKLH,UAAAA,QAAQ,EAAE,SALL;AAMLI,UAAAA,UAAU,EAAE;AANP,SADT;AASE,QAAA,SAAS,EAAC,OATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAxGF,CADF,CA1DF,CAFF,CAsLE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAtNF;AAwND;;AAnS4B;;AAsS/B,MAAMK,aAAa,GAAG,OAAO;AAAEvD,EAAAA;AAAF,CAAP,KAAqB;AACzC,MAAI;AACF,UAAM;AAAEyB,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAAC8C,GAAN,CAAW,0BAAyBxD,KAAM,EAA1C,CAAvB;;AACA,QAAIyB,IAAJ,EAAU;AACR,YAAM,IAAIgC,KAAJ,EAAN;AACD;AACF,GALD,CAKE,OAAOtB,CAAP,EAAU;AACV,UAAM;AAAEnC,MAAAA,KAAK,EAAE;AAAT,KAAN;AACD;AACF,CATD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAeT,SAAS,CAAC;AACvBmE,EAAAA,IAAI,EAAE,QADiB;AAEvBH,EAAAA,aAFuB;AAGvBI,EAAAA,iBAAiB,EAAE,CAAC,OAAD;AAHI,CAAD,CAAT,CAIZ9C,MAJY,CAAf,C,CAKA","sourcesContent":["import React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport {\n  Form,\n  Segment,\n  Button,\n  Container,\n  Grid,\n  Image,\n  Header,\n  Icon,\n} from 'semantic-ui-react';\nimport { email, length, required } from 'redux-form-validators';\nimport logo from './../../components/Images/Logo.png';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport fanuel from './../../components/Images/fanuel.jpg';\nimport ganesh from './../../components/Images/ganesh.png';\nimport vanessa from './../../components/Images/vanessa.jpeg';\nimport husam from './../../components/Images/husam.jpeg';\nimport './../../index.css';\n\nimport axios from 'axios';\nimport './../../index.css';\nimport { AUTH_USER, AUTH_USER_ERROR } from '../../actions/types';\n\nclass SignUp extends Component {\n  renderEmail = ({ input, meta }) => {\n    // console.log(meta);\n    return (\n      <Form.Input\n        {...input}\n        error={meta.touched && meta.error}\n        fluid\n        icon=\"user\"\n        iconPosition=\"left\"\n        autoComplete=\"off\"\n        placeholder=\"Email Address\"\n      />\n    );\n  };\n  renderUserName = ({ input, meta }) => {\n    // console.log(meta);\n    return (\n      <Form.Input\n        {...input}\n        error={meta.touched && meta.error}\n        fluid\n        icon=\"user\"\n        iconPosition=\"left\"\n        autoComplete=\"off\"\n        placeholder=\"User Name\"\n      />\n    );\n  };\n  onSubmit = async (formValues, dispatch) => {\n    console.log(formValues);\n    // console.log(formsProps)\n    try {\n      const { data } = await axios.post('/api/auth/signup', formValues);\n      localStorage.setItem('token', data.token);\n      dispatch({ type: AUTH_USER, payload: data.token });\n      console.log('reached');\n      this.props.history.push('/watchlist');\n    } catch (e) {\n      dispatch({ type: AUTH_USER_ERROR, payload: e });\n    }\n  };\n\n  // renderEmail = ({ input, meta }) => {\n  //   return (\n  //     <Form.Input\n  //       {...input}\n  //       error={ meta.touched && meta.error }\n  //       fluid\n  //       icon='user'\n  //       iconPosition='left'\n  //       autoComplete='off'\n  //       placeholder='Email Address'\n  //     />\n  //   );\n  // }\n\n  renderPassword = ({ input, meta }) => {\n    return (\n      <Form.Input\n        {...input}\n        error={meta.touched && meta.error}\n        fluid\n        type=\"password\"\n        icon=\"lock\"\n        placeholder=\"password\"\n        autoComplete=\"off\"\n        iconPosition=\"left\"\n      />\n    );\n  };\n\n  render() {\n    // console.log(\"Inside of signup render\", this.props);\n    const { handleSubmit, invalid, submitting, submitFailed } = this.props;\n    return (\n      // onSubmit={handleSubmit(this.onSubmit)}\n      <div>\n        {/* background-Image: linear-gradient(#1F1C2C,#928DAB); */}\n        <Helmet>\n          <style>{'body { background-color:#532f8c;  }'}</style>\n        </Helmet>\n        <Grid\n          textAlign=\"center\"\n          style={{ height: '75vh', margin: '0px 0 99px 0' }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 500 }}>\n            <Form size=\"large\" onSubmit={handleSubmit(this.onSubmit)}>\n              <Segment style={{ backgroundColor: '#f7f8fa' }}>\n                <Header\n                  color=\"grey\"\n                  textAlign=\"center\"\n                  style={{ fontSize: '33px' }}\n                >\n                  <Image\n                    style={{ backgroundColor: 'white' }}\n                    className=\"im22\"\n                    src={logo}\n                  />\n                  <span style={{ margin: '0 0 0 15px' }}>\n                    Create an account{' '}\n                  </span>\n                </Header>\n                <Field\n                  name=\"email\"\n                  component={this.renderEmail}\n                  validate={[\n                    required({ msg: 'Email is required' }),\n                    email({ msg: 'You must provide a valid email address' }),\n                  ]}\n                />\n                <Field\n                  name=\"password\"\n                  component={this.renderPassword}\n                  validate={[\n                    required({ msg: 'You must provide a Password' }),\n                    length({\n                      min: 6,\n                      msg: 'Your password must be at least 6 characters long',\n                    }),\n                  ]}\n                />\n                <Button\n                  content=\"Sign Up\"\n                  color=\"purple\"\n                  fluid\n                  size=\"large\"\n                  type=\"submit\"\n                  disabled={invalid || submitting || submitFailed}\n                />\n              </Segment>\n            </Form>\n          </Grid.Column>\n        </Grid>\n        <div className=\"div-tag1\" style={{ backgroundColor: '#222222' }}>\n          <Container>\n            <Segment vertical>\n              <Grid columns={3} divided>\n                <Grid.Row>\n                  <Grid.Column>\n                    <h1 style={{ color: 'white' }} className=\"how-it-works\">\n                      10/10 Stock Tracker\n                    </h1>\n                    <div>\n                      <p\n                        style={{\n                          color: 'white',\n                          fontSize: '1.25rem',\n                          fontFamily:\n                            '\"Helvetica Neue\",Helvetica,Arial,sans-serif',\n                        }}\n                      >\n                        This application is a helpful tool to save stocks onto a\n                        personal watchlist. It provides information on the stock\n                        markets top 10 winners and losers of the day. Users can\n                        also search and track any stock in the market and view\n                        stocks that are trending among other users.\n                      </p>\n                    </div>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <h1 style={{ color: 'white' }} className=\"how-it-works\">\n                      {' '}\n                      Get Started\n                    </h1>\n                    <p\n                      style={{\n                        color: 'white',\n                        fontSize: '1.25rem',\n                        fontFamily:\n                          '\"Helvetica Neue\",Helvetica,Arial,sans-serif',\n                      }}\n                    >\n                      {' '}\n                      Get access to your Watchlist by creating an account.\n                    </p>\n                    <Link as={Link} to=\"/signup\">\n                      <Button color=\"purple\"> Register Now</Button>\n                    </Link>\n                  </Grid.Column>\n                  <Grid.Column>\n                    <h1 style={{ color: 'white' }} className=\"how-it-works\">\n                      {' '}\n                      Contact Us\n                    </h1>\n                    <p\n                      style={{\n                        color: 'white',\n                        fontSize: '1.25rem',\n                        fontFamily:\n                          '\"Helvetica Neue\",Helvetica,Arial,sans-serif',\n                        marginBottom: '10px',\n                      }}\n                    >\n                      {' '}\n                      <span>\n                        {' '}\n                        <a\n                          href=\"mailto:fanuelnalem@outlook.com\"\n                          style={{ color: 'white' }}\n                        >\n                          {' '}\n                          <Icon name=\"mail\"></Icon>Send Feedback\n                        </a>{' '}\n                      </span>\n                    </p>\n\n                    <h1\n                      className=\"how-it-works\"\n                      style={{\n                        color: 'white',\n                        marginTop: '0',\n                        marginBottom: '18px',\n                      }}\n                    >\n                      Developed By\n                    </h1>\n                    <div>\n                      <Grid>\n                        <Grid.Row columns={4}>\n                          <Grid.Column>\n                            <Image className=\"img\" src={vanessa} />\n                          </Grid.Column>\n                          <Grid.Column>\n                            <Image className=\"img\" src={husam} />\n                          </Grid.Column>\n                          <Grid.Column>\n                            <Image className=\"img\" src={fanuel} />\n                          </Grid.Column>\n                          <Grid.Column>\n                            <Image className=\"img\" src={ganesh} />\n                          </Grid.Column>\n                        </Grid.Row>\n                      </Grid>\n                    </div>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Segment>\n            <p\n              style={{\n                backgroundColor: 'rgb(55, 55, 59)',\n                padding: '10px',\n                borderRadius: '5px',\n                color: 'white',\n                fontSize: '1.25rem',\n                fontFamily: '\"Helvetica Neue\",Helvetica,Arial,sans-serif',\n              }}\n              className=\"p-tag\"\n            >\n              Copyright 2020. All rights reserved.\n            </p>\n          </Container>\n        </div>\n      </div>\n\n      // <Form size='large' onSubmit={handleSubmit(this.onSubmit)}>\n      //   <Segment stacked>\n      //     <Field\n      //       name='email'\n      //       iscool='mannyiscool'\n      //       component={ this.renderEmail }\n      //       validate={\n      //         [\n      //           required({ msg: 'Email is required' }),\n      //           email({ msg: 'You must provide a valid email address' })\n      //         ]\n      //       }\n      //     />\n      //     <Field\n      //       name='password'\n      //       component={this.renderPassword}\n      //       validate={\n      //         [\n      //           required({ msg: 'You must provide a password' }),\n      //           length({ min: 6, msg: 'Your password must be at least 6 characters long' })\n      //         ]\n      //       }\n      //     />\n      //     <Button\n      //       content='Sign up'\n      //       color='teal'\n      //       fluid\n      //       size='large'\n      //       type='submit'\n      // disabled={ invalid || submitting || submitFailed }\n      //     />\n      //   </Segment>\n      // </Form>\n    );\n  }\n}\n\nconst asyncValidate = async ({ email }) => {\n  try {\n    const { data } = await axios.get(`/api/user/emails?email=${email}`);\n    if (data) {\n      throw new Error();\n    }\n  } catch (e) {\n    throw { email: 'email is already taken' };\n  }\n};\n// const asyncValidate = async formValues => {\n//   try {\n//     const { data } = await axios.get(`/api/user/emails`);\n//     const foundEmail = data.some((user)=>(user.email === formValues.email))\n//     if(foundEmail){\n//       throw new Error();\n//     }\n//     // ?email=${formValues.email}\n//     // if (data) {\n//     //   throw new Error();\n//     // }\n//   } catch (e) {\n//     throw { email: 'Email already exists, please sign up with a different email' };\n//   }\n// }\n// export default reduxForm({form:'signup'})(SignUp)\nexport default reduxForm({\n  form: 'signup',\n  asyncValidate,\n  asyncChangeFields: ['email'],\n})(SignUp);\n// export default SignUp;\n"]},"metadata":{},"sourceType":"module"}