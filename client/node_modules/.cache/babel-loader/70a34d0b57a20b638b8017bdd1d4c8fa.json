{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/pro3/Project-3/client/src/containers/userWatchList/index.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Grid, Divider, Header, Form, Segment, Message, Table, List, Pagination, Button } from 'semantic-ui-react';\nimport FormContainer from './../searchForm/formContainer/index';\nimport { compose } from 'redux';\nimport { Helmet } from 'react-helmet';\nimport { getUserData, getOtherUsers } from './../../actions/profile';\nimport axios from 'axios';\nimport UserTodoListItems from './userWatchListItem'; // import requireAuth from '../../hoc/requireAuth';\n\nimport { getUserStocks, updateStocksCompletedById, deleteStockById } from '../../actions/stocks';\nimport { ADD_STOCKS_ERROR, ADD_STOCK } from '../../actions/types';\n\nclass UserTodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      activePage: 1,\n      start: 0,\n      end: 10\n    };\n\n    this.onSubmit = async (formValues, dispatch) => {\n      try {\n        await axios.post('/api/user/stock', formValues, {\n          headers: {\n            authorization: localStorage.getItem('token')\n          }\n        });\n        dispatch({\n          type: ADD_STOCK\n        });\n        this.props.getUserStocks();\n      } catch (e) {\n        dispatch({\n          type: ADD_STOCKS_ERROR,\n          payload: e\n        });\n      }\n    };\n\n    this.addWinnerStock = () => {\n      alert('hello');\n    };\n\n    this.renderAddTodo = ({\n      input,\n      meta\n    }) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form.Input, Object.assign({}, input, {\n        error: meta.touched && meta.error,\n        fluid: true,\n        autoComplete: \"off\",\n        placeholder: \"Add your stock\",\n        icon: \"dollar\",\n        iconPosition: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      })));\n    };\n\n    this.handlePageChange = (event, data) => {\n      console.log(data);\n      this.setState({\n        activePage: data.activePage,\n        start: data.activePage === 1 ? 0 : data.activePage * 10 - 10,\n        end: data.activePage * 10\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserStocks();\n  }\n\n  render(props) {\n    console.log(this.props, 'dcsdcsds');\n    const {\n      handleSubmit\n    } = this.props; // console.log(this.props.result,'rerfv')\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, 'body { background-color: #532f8c ; }')), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '80px 20px 0px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      style: {\n        backgroundColor: '#222324',\n        border: '1px solid white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      columns: 2,\n      relaxed: \"very\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-info \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FormContainer, {\n      graphx: this.props.x,\n      graphy: this.props.y,\n      qoute: this.props.qoute,\n      info: this.props.result // graphx = {this.props.xvalues}\n      // graphy = {this.props.yvalues}\n      // data= {this.props.result}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Grid.Column, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '0 25px 34px 0'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      as: \"h2\",\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 23\n      }\n    }, \"My WatchList \")), /*#__PURE__*/React.createElement(Form, {\n      size: \"large\",\n      onSubmit: handleSubmit(this.onSubmit),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      style: {\n        backgroundColor: '#333333'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"text\",\n      component: this.renderAddTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      fluid: true,\n      color: \"purple\",\n      content: \"add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(List, {\n      animated: true,\n      divided: true,\n      selection: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(UserTodoListItems, {\n      stocks: this.props.stocks.slice(this.state.start, this.state.end),\n      handleUpdate: this.props.updateStocksCompletedById,\n      handleDelete: this.props.deleteStockById,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    })), this.props.stocks.length <= 9 ? null : /*#__PURE__*/React.createElement(Pagination, {\n      pointing: true,\n      secondary: true,\n      totalPages: Math.ceil(this.props.stocks.length / 10),\n      onPageChange: (event, data) => this.handlePageChange(event, data),\n      activePage: this.state.activePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 23\n      }\n    }))))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  stocks: {\n    userStocks,\n    getUserStocksServerError,\n    getUserStockClientError,\n    deleteStockByIdError\n  }\n}) {\n  return {\n    stocks: userStocks,\n    clientError: getUserStockClientError,\n    serverError: getUserStocksServerError,\n    deleteStockByIdError\n  };\n}\n\nexport default compose(reduxForm({\n  form: 'addTodo'\n}), connect(mapStateToProps, {\n  getUserStocks,\n  updateStocksCompletedById,\n  deleteStockById,\n  getUserData,\n  getOtherUsers\n}))(UserTodoList);","map":{"version":3,"sources":["/Users/fanuelalem/pro3/Project-3/client/src/containers/userWatchList/index.js"],"names":["React","Component","reduxForm","Field","connect","Grid","Divider","Header","Form","Segment","Message","Table","List","Pagination","Button","FormContainer","compose","Helmet","getUserData","getOtherUsers","axios","UserTodoListItems","getUserStocks","updateStocksCompletedById","deleteStockById","ADD_STOCKS_ERROR","ADD_STOCK","UserTodoList","state","activePage","start","end","onSubmit","formValues","dispatch","post","headers","authorization","localStorage","getItem","type","props","e","payload","addWinnerStock","alert","renderAddTodo","input","meta","touched","error","handlePageChange","event","data","console","log","setState","componentDidMount","render","handleSubmit","margin","backgroundColor","border","x","y","qoute","result","padding","color","stocks","slice","length","Math","ceil","mapStateToProps","userStocks","getUserStocksServerError","getUserStockClientError","deleteStockByIdError","clientError","serverError","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport {\n  Grid,\n  Divider,\n  Header,\n  Form,\n  Segment,\n  Message,\n  Table,\n  List,\n  Pagination,\n  Button\n} from 'semantic-ui-react';\nimport FormContainer from './../searchForm/formContainer/index';\nimport { compose } from 'redux';\nimport { Helmet } from 'react-helmet';\nimport { getUserData, getOtherUsers } from './../../actions/profile';\n\nimport axios from 'axios';\n\nimport UserTodoListItems from './userWatchListItem';\n\n// import requireAuth from '../../hoc/requireAuth';\n\nimport {\n  getUserStocks,\n  updateStocksCompletedById,\n  deleteStockById,\n} from '../../actions/stocks';\n\nimport { ADD_STOCKS_ERROR, ADD_STOCK } from '../../actions/types';\n\nclass UserTodoList extends Component {\n  state = {\n    activePage: 1,\n    start: 0,\n    end: 10,\n  };\n\n  // onSubmit = async (formValues,dispatch) => {\n\n  //   const {text} = formValues\n\n  //         try {\n  //         await axios.post('/api/user/stock', {text:'ko'}, { headers: { 'authorization': localStorage.getItem('token')}} );\n  //         dispatch({ type: ADD_TODO });\n  //         this.props.getUserTodos();\n  //       } catch (e) {\n  //         dispatch({ type: ADD_TODO_ERROR, payload: e });\n  //       }\n  //     }\n\n  onSubmit = async (formValues, dispatch) => {\n    try {\n      await axios.post('/api/user/stock', formValues, {\n        headers: { authorization: localStorage.getItem('token') },\n      });\n      dispatch({ type: ADD_STOCK });\n      this.props.getUserStocks();\n    } catch (e) {\n      dispatch({ type: ADD_STOCKS_ERROR, payload: e });\n    }\n  };\n\n  addWinnerStock = () => {\n    alert('hello');\n  };\n\n  componentDidMount() {\n    this.props.getUserStocks();\n  }\n\n  renderAddTodo = ({ input, meta }) => {\n    return (\n      <>\n        <Form.Input\n          {...input}\n          error={meta.touched && meta.error}\n          fluid\n          autoComplete=\"off\"\n          placeholder=\"Add your stock\"\n          icon=\"dollar\"\n          iconPosition=\"left\"\n        />\n      </>\n    );\n  };\n\n  handlePageChange = (event, data) => {\n    console.log(data);\n    this.setState({\n      activePage: data.activePage,\n      start: data.activePage === 1 ? 0 : data.activePage * 10 - 10,\n      end: data.activePage * 10,\n    });\n  };\n\n  render(props) {\n    console.log(this.props, 'dcsdcsds');\n    const { handleSubmit } = this.props;\n    // console.log(this.props.result,'rerfv')\n\n    return (\n      <>\n        <Helmet>\n          <style>{'body { background-color: #532f8c ; }'}</style>\n        </Helmet>\n        <div style={{ margin: '80px 20px 0px 20px' }}>\n          <Segment\n            style={{ backgroundColor: '#222324', border: '1px solid white' }}\n          >\n            <div\n            // style={{backgroundColor:'#222222'}}\n            >\n              <Grid columns={2} relaxed=\"very\">\n                <Grid.Column>\n                  <div className=\"div-info \">\n                    <FormContainer\n                      graphx={this.props.x}\n                      graphy={this.props.y}\n                      qoute={this.props.qoute}\n                      info={this.props.result}\n                      // graphx = {this.props.xvalues}\n                      // graphy = {this.props.yvalues}\n                      // data= {this.props.result}\n                    />\n                  </div>\n                </Grid.Column>\n                <Grid.Column>\n                  <div style={{ padding: '0 25px 34px 0' }}>\n                    <Header as=\"h2\" textAlign=\"center\">\n                      <p style={{ color: 'white' }}>My WatchList </p>\n                    </Header>\n                    <Form size=\"large\" onSubmit={handleSubmit(this.onSubmit)}>\n                      <Segment style={{ backgroundColor: '#333333' }}>\n                        <Field name=\"text\" component={this.renderAddTodo} />\n                        <Button\n                          type=\"submit\"\n                          fluid\n                          color=\"purple\"\n                          content=\"add\"\n                        />\n                      </Segment>\n                    </Form>\n                    <List animated divided selection>\n                      <UserTodoListItems\n                        stocks={this.props.stocks.slice(\n                          this.state.start,\n                          this.state.end\n                        )}\n                        handleUpdate={this.props.updateStocksCompletedById}\n                        handleDelete={this.props.deleteStockById}\n                      />\n                    </List>\n\n                    {this.props.stocks.length <= 9 ? null : (\n                      <Pagination\n                        pointing\n                        secondary\n                        totalPages={Math.ceil(this.props.stocks.length / 10)}\n                        onPageChange={(event, data) =>\n                          this.handlePageChange(event, data)\n                        }\n                        activePage={this.state.activePage}\n                      />\n                    )}\n                  </div>\n                </Grid.Column>\n              </Grid>\n            </div>\n          </Segment>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps({\n  stocks: {\n    userStocks,\n    getUserStocksServerError,\n    getUserStockClientError,\n    deleteStockByIdError,\n  },\n}) {\n  return {\n    stocks: userStocks,\n    clientError: getUserStockClientError,\n    serverError: getUserStocksServerError,\n    deleteStockByIdError,\n  };\n}\nexport default compose(\n  reduxForm({ form: 'addTodo' }),\n  connect(mapStateToProps, {\n    getUserStocks,\n    updateStocksCompletedById,\n    deleteStockById,\n    getUserData,\n    getOtherUsers,\n  })\n)(UserTodoList);\n"]},"metadata":{},"sourceType":"module"}