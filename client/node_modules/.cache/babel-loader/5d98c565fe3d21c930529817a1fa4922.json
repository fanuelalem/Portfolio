{"ast":null,"code":"var _jsxFileName = \"/Users/fanuelalem/my projects/pro3/Project-3/client/src/containers/apiListWinners/index.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Popup, Table, Form, Message, Button, Icon } from 'semantic-ui-react';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\nimport { getUserStocks, updateStocksCompletedById, deleteStockById } from '../../actions/stocks';\nimport { ADD_STOCKS_ERROR, ADD_STOCK } from '../../actions/types';\n\nclass WinnerListItems extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: '',\n      visible: false,\n      isOpen: false,\n      rank: 1,\n      ticker: ''\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        isOpen: false\n      });\n      clearTimeout(this.timeout);\n    };\n\n    this.handleOpen = () => {\n      this.setState({\n        isOpen: true\n      });\n      this.timeout = setTimeout(() => {\n        this.setState({\n          isOpen: false\n        });\n      }, 3000);\n    };\n\n    this.onSubmit = async (formValues, dispatch) => {\n      const {\n        title\n      } = formValues;\n\n      try {\n        await axios.post('/api/user/stock', {\n          text: `${this.state.title} (${this.state.ticker})`\n        }, {\n          headers: {\n            authorization: localStorage.getItem('token')\n          }\n        });\n        dispatch({\n          type: ADD_STOCK\n        });\n        this.props.getUserStocks();\n      } catch (e) {\n        dispatch({\n          type: ADD_STOCKS_ERROR,\n          payload: e\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserStocks();\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    const style = {\n      borderRadius: '3px',\n      padding: '1em'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, 'body { background-color:#532f8c    ; }')), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '80px 20px 0px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      inverted: true,\n      selectable: true,\n      widths: 4,\n      style: {\n        border: '1px solid white',\n        color: 'white'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      style: {\n        color: 'white',\n        backgroundcolor: '#2b2b2b'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, \"Company [ticker]\")), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      style: {\n        color: 'white',\n        backgroundcolor: '#2b2b2b'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }, \"percent change\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      style: {\n        color: 'white',\n        backgroundcolor: '#2b2b2b'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }, \"Last price\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      style: {\n        color: 'white',\n        backgroundcolor: '#2b2b2b'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, \"price change\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, this.props.gainers.map(({\n      performanceId,\n      standardName,\n      ticker,\n      percentChange,\n      lastPrice,\n      priceChange\n    }) => /*#__PURE__*/React.createElement(Table.Row, {\n      key: performanceId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit(this.onSubmit) // onSubmit={()=>{alert('hello')}}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Popup // open={this.state.isOpen}\n    , {\n      style: style,\n      on: \"click\",\n      basic: true,\n      trigger: /*#__PURE__*/React.createElement(Button, {\n        color: \"green\",\n        onClick: () => {\n          // const a = this.handleClose()\n          // const b = this.handleOpen()\n          this.setState({\n            title: standardName,\n            ticker: ticker\n          }, () => {\n            console.log(standardName);\n          });\n        },\n        style: {\n          margin: '0 10px 0 0'\n        },\n        icon: \"eye\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Icon, {\n        name: \"plus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 33\n        }\n      }), \" save to watchlist\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Message, {\n      vertical: true,\n      compact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, `${standardName} has been added to your watchlist`)), /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        fontWeight: '500',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 27\n      }\n    }, standardName, \" [\", ticker, \"]\"))), /*#__PURE__*/React.createElement(Table.Cell, {\n      style: {\n        color: '#22b945'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }\n    }, \"+\", Math.ceil(percentChange * 100) / 100, \" %\", ' '), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }\n    }, \"$\", lastPrice, \" \"), /*#__PURE__*/React.createElement(Table.Cell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }, \"$ \", priceChange, \" \"))))))));\n  }\n\n}\n\nfunction mapStateToProps({\n  stocks: {\n    userStocks,\n    getUserStocksServerError,\n    getUserStockClientError,\n    deleteStockByIdError\n  }\n}) {\n  return {\n    stocks: userStocks,\n    clientError: getUserStockClientError,\n    serverError: getUserStocksServerError,\n    deleteStockByIdError\n  };\n}\n\nexport default compose(reduxForm({\n  form: 'addTodo'\n}), connect(mapStateToProps, {\n  getUserStocks,\n  updateStocksCompletedById,\n  deleteStockById\n}))(WinnerListItems);","map":{"version":3,"sources":["/Users/fanuelalem/my projects/pro3/Project-3/client/src/containers/apiListWinners/index.js"],"names":["React","Component","reduxForm","Field","connect","Popup","Table","Form","Message","Button","Icon","compose","axios","Helmet","getUserStocks","updateStocksCompletedById","deleteStockById","ADD_STOCKS_ERROR","ADD_STOCK","WinnerListItems","state","title","visible","isOpen","rank","ticker","handleClose","setState","clearTimeout","timeout","handleOpen","setTimeout","onSubmit","formValues","dispatch","post","text","headers","authorization","localStorage","getItem","type","props","e","payload","componentDidMount","render","handleSubmit","style","borderRadius","padding","margin","border","color","backgroundcolor","gainers","map","performanceId","standardName","percentChange","lastPrice","priceChange","console","log","fontWeight","fontSize","Math","ceil","mapStateToProps","stocks","userStocks","getUserStocksServerError","getUserStockClientError","deleteStockByIdError","clientError","serverError","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { connect } from 'react-redux';\nimport {\n  Popup,\n  Table,\n  Form,\n  Message,\n  Button,\n  Icon,\n} from 'semantic-ui-react';\nimport { compose } from 'redux';\nimport axios from 'axios';\nimport { Helmet } from 'react-helmet';\n\nimport {\n  getUserStocks,\n  updateStocksCompletedById,\n  deleteStockById,\n} from '../../actions/stocks';\n import { ADD_STOCKS_ERROR, ADD_STOCK } from '../../actions/types';\n \nclass WinnerListItems extends Component {\n  state = {\n    title: '',\n    visible: false,\n    isOpen: false,\n    rank: 1,\n    ticker: '',\n  };\n\n  handleClose = () => {\n    this.setState({ isOpen: false });\n    clearTimeout(this.timeout);\n  };\n  handleOpen = () => {\n    this.setState({ isOpen: true });\n\n    this.timeout = setTimeout(() => {\n      this.setState({ isOpen: false });\n    }, 3000);\n  };\n\n  onSubmit = async (formValues, dispatch) => {\n    const { title } = formValues;\n    try {\n      await axios.post(\n        '/api/user/stock',\n        { text: `${this.state.title} (${this.state.ticker})` },\n        { headers: { authorization: localStorage.getItem('token') } }\n      );\n      dispatch({ type: ADD_STOCK });\n      this.props.getUserStocks();\n    } catch (e) {\n      dispatch({ type: ADD_STOCKS_ERROR, payload: e });\n    }\n  };\n\n  componentDidMount() {\n    this.props.getUserStocks();\n  }\n\n  render() {\n    const { handleSubmit } = this.props;\n    const style = {\n      borderRadius: '3px',\n      padding: '1em',\n    };\n\n    return (\n      <div>\n        <div>\n          <Helmet>\n            <style>{'body { background-color:#532f8c    ; }'}</style>\n          </Helmet>\n          <div style={{ margin: '80px 20px 0px 20px' }}>\n            <Table\n              inverted\n              selectable\n              widths={4}\n              style={{ border: '1px solid white', color: 'white' }}\n            >\n              <Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell\n                    style={{ color: 'white', backgroundcolor: '#2b2b2b' }}\n                  >\n                    <h2>Company [ticker]</h2>\n                  </Table.HeaderCell>\n                  <Table.HeaderCell\n                    style={{ color: 'white', backgroundcolor: '#2b2b2b' }}\n                  >\n                    percent change\n                  </Table.HeaderCell>\n\n                  <Table.HeaderCell\n                    style={{ color: 'white', backgroundcolor: '#2b2b2b' }}\n                  >\n                    Last price\n                  </Table.HeaderCell>\n                  <Table.HeaderCell\n                    style={{ color: 'white', backgroundcolor: '#2b2b2b' }}\n                  >\n                    price change\n                  </Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n              <Table.Body>\n                {this.props.gainers.map(\n                  ({\n                    performanceId,\n                    standardName,\n                    ticker,\n                    percentChange,\n                    lastPrice,\n                    priceChange\n                  }) => (\n                    <Table.Row key={performanceId}>\n                      <Table.Cell>\n                        <Form\n                          onSubmit={handleSubmit(this.onSubmit)}\n                          // onSubmit={()=>{alert('hello')}}\n                        >\n                          <Popup\n                            // open={this.state.isOpen}\n                            style={style}\n                            on=\"click\"\n                            basic\n                            trigger={\n                              <Button\n                                color=\"green\"\n                                onClick={() => {\n                                  // const a = this.handleClose()\n                                  // const b = this.handleOpen()\n                                  this.setState(\n                                    { title: standardName, ticker: ticker },\n                                    () => {\n                                      console.log(standardName);\n                                    }\n                                  );\n                                }}\n                                style={{ margin: '0 10px 0 0' }}\n                                icon=\"eye\"\n                              >\n                                <Icon name=\"plus\"></Icon> save to watchlist\n                              </Button>\n                            }\n                          >\n                            <Message vertical compact>\n                              {`${standardName} has been added to your watchlist`}\n                            </Message>\n                          </Popup>\n\n         \n\n                          <span style={{ fontWeight: '500', fontSize: '20px' }}>\n                            {standardName} [{ticker}]\n                          </span>\n                        </Form>\n                      </Table.Cell>\n                      <Table.Cell style={{ color: '#22b945' }}>\n                        +{Math.ceil(percentChange * 100) / 100} %{' '}\n                      </Table.Cell>\n\n                      <Table.Cell>${lastPrice} </Table.Cell>\n                      <Table.Cell>$ {priceChange} </Table.Cell>\n\n                      {/* <DeleteTodoModal handleDelete={props.handleDelete} id={_id} text={text}/> */}\n                    </Table.Row>\n                  )\n                )}\n              </Table.Body>\n            </Table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({\n  stocks: {\n    userStocks,\n    getUserStocksServerError,\n    getUserStockClientError,\n    deleteStockByIdError,\n  },\n}) {\n  return {\n    stocks: userStocks,\n    clientError: getUserStockClientError,\n    serverError: getUserStocksServerError,\n    deleteStockByIdError,\n  };\n}\nexport default compose(\n  reduxForm({ form: 'addTodo' }),\n  connect(mapStateToProps, {\n    getUserStocks,\n    updateStocksCompletedById,\n    deleteStockById,\n  })\n)(WinnerListItems);\n\n"]},"metadata":{},"sourceType":"module"}